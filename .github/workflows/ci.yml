name: OLTP CI

on:
  push:
    branches:
      - main  # Trigger CI on pushes to the main branch


jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22] # Test on multiple Node.js versions

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Verify Environment Setup
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      run: | 
        echo "Environment variables are set"
        echo "MONGO_URI length: ${#MONGO_URI}"
        echo "JWT_SECRET length: ${#JWT_SECRET}"  
        echo "PORT: $PORT"
      
    - name: Stop PM2 Services (if running)
      run: pm2 stop all || true  # Don't fail if no processes running

    # Install dependencies for backend
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: | 
       npm install --global yarn
       yarn --version
       yarn install
      
    # Install dependencies for frontend
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        df -h
        sudo rm -rf ./build
        yarn install
        yarn run build


    # Run backend tests
    - name: Run Backend Tests
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: ${{ secrets.PORT }}
      working-directory: ./backend
      run: npm test

    # Install Dependencies Using npm ci (Backend) - Remove this duplicate step
    # - name: Install Backend Dependencies with npm ci
    #   working-directory: ./backend
    #   run: npm ci

    # Create .env File and Add Secrets for Production in AWS (A part of CD)
    - name: Create Production Environment File
      working-directory: ./backend
      run: | 
        touch .env
        echo "${{ secrets.PROD }}" > .env

    # Start and Restart Services in AWS (A part of CD)
    - name: Start PM2 Services
      run: pm2 start all

    - name: Restart PM2 Services
      run: pm2 restart all
