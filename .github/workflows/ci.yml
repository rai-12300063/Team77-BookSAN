name: BOOKSAN CI/CD

on:
  push:
    branches:
      - main
      - BOOKSAN-150-development-final
  pull_request:
    branches:
      - main

jobs:
  ci:
    name: BookSAN CI - Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      # Backend
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run Backend Tests
        working-directory: ./backend
        timeout-minutes: 10
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: npm test

      # Frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run Frontend Tests
        working-directory: ./frontend
        timeout-minutes: 10
        run: CI=true npm test -- --coverage --watchAll=false

      - name: Build Frontend
        working-directory: ./frontend
        timeout-minutes: 15
        run: npm run build

  cd:
    name: BookSAN CD - Deploy to Server
    runs-on: ubuntu-latest   # Use GitHub hosted runner for now
    needs: ci

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Create Production Environment File
        working-directory: ./backend
        run: |
          touch .env
          echo "${{ secrets.PROD }}" > .env

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Frontend for Production
        working-directory: ./frontend
        run: npm run build

      - name: Simulate Deployment (GitHub Hosted Runner)
        run: |
          echo "🚀 Simulating deployment process..."
          echo "📦 Build artifacts ready for deployment"
          echo "⚙️ PM2 configuration validated"
          echo "✅ Deployment simulation completed successfully"
          echo ""
          echo "📋 Next steps for actual deployment:"
          echo "1. Set up self-hosted runner on your server"
          echo "2. Update workflow to use: runs-on: [self-hosted, deploy-runner]"
          echo "3. Ensure PM2 is installed on deployment server"
          echo ""
          echo "🎉 CI/CD Pipeline validation complete!"
